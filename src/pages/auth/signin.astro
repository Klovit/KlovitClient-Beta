---
import '@/styles/globals.css'
import Header from "@/components/head.astro";
import Footer from '@/components/footer.astro';
import dotenv from 'dotenv';
import db from "@/database";
import Toast from '@/components/Toast.astro';
import Nav from '@/components/auth/Nav';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
const config = await db.get("config")
const installed = await db.get("installed")
dotenv.config();
const { cookies, redirect } = Astro;

if (installed != true) {
    return Astro.redirect(`/installer/start`)
}

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");


if (accessToken && refreshToken) {
  return redirect("/");
}
const registered = Astro.url.searchParams.get('registered')! || '';
const errorstate = Astro.url.searchParams.get('error')! || '';
const errormsg = Astro.url.searchParams.get('error')! || '';
const year = new Date().getFullYear()

---
<!DOCTYPE html>
<html>
<Header />


<body class="h-screen relative">
    <div class="">
<main class="">
    <Nav client:load />
    <script is:inline>
        const getThemePreference = () => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme');
            }
            return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };
        const isDark = getThemePreference() === 'dark';
        document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
     
        if (typeof localStorage !== 'undefined') {
            const observer = new MutationObserver(() => {
                const isDark = document.documentElement.classList.contains('dark');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
            });
            observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
        }
    </script>
    <Toast />
<section class="px-2 md:px-96 w-full mt-16">
    <div class="border rounded-2xl h-fit p-2 ">
    <div class="sm:mx-auto sm:w-full sm:max-w-md grid grid-cols-1 items-center"><br>
        <h2 class="text-center text-2xl">Login to {config.name}</h2>
        <span class="text-center text-xs">Don't have an account? <a href="/auth/register" class="text-red-500">Register now</a></span>
      </div><br>
      <div class="flex justify-center">
   <form action="/api/auth/signin" method="post" class="grid grid-cols-1 w-full">
    <Label className="" htmlFor="email">Email:</Label>
    <Input className="rounded-xl border test-size-xs px-2 py-1 mb-1" type="email" name="email" id="email" /><br>
    <Label className="" htmlFor="password">Password:</Label>
    <Input className="rounded-xl border test-size-xs px-2 py-1 mb-5" type="password" name="password" id="password" />
    <div class="flex justify-center">
    <Button variant='outline' className="relative rounded-lg px-5 py-1"> Login </Button><br>
</div>
    <div class="flex w-full justify-center mt-2 mb-2">
      <span class="col-span-3 text-lg text-center">Login with</span>
  </div>
  <div class="flex justify-center gap-2">
          <button value="google" name="provider" type="submit" class="border relative font-medium rounded-full text-lg p-2 text-center"><i class="fa-brands fa-google">  Google</i></button>
          <button value="github" name="provider" type="submit" class="border relative font-medium rounded-full text-lg p-2 text-center"><i class="fa-brands fa-github">  Github</i></button>
          <button value="discord" name="provider" type="submit"class="border relative font-medium rounded-full text-lg p-2 text-center"><i class="fa-brands fa-discord">  Discord</i></button>
</div>
   </form>
</div>
</div>
  </section>
<Footer />
                </div>
            </main>

    </div>
</body>


</html>